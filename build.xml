<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project default="main" name="Concatenate js files" xmlns:fx="javafx:com.sun.javafx.tools.ant">

	<!-- Specify "-Dservertype=preview" in bat arguments to build preview -->
	<property name="servertype" value="local" />
	<property name="destination" value="build/${servertype}" />

	<property name="plotly" value="src='https://cdn.plot.ly/plotly-3.0.1.min.js'" />

	<property name="combined" value="true" />
	<property name="replaceQueries" value="false" />

	<!-- Adjust intros from * to a particular intro to only build that intro -->
	<property name="dashboard" value="*" />
	<basename property="filename" file="${file}" />
	<property name="filepath" value="${destination}/lib/${filename}" />
	<property name="bodypath" value="${destination}/body/${filename}" />

	<property name="dashboardPath" value="dashboards" />
	<property name="dashboardPathJS" value="${dashboardPath}/js" />
	<property name="dashboardPathHTML" value="${dashboardPath}/html" />
	<property name="dashboardPathCSS" value="${dashboardPath}/css" />
	<property name="dashboardPathReplacements" value="${dashboardPath}/replacements" />


	<taskdef resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement location="lib/ant-contrib-1.0b3.jar" />
		</classpath>
	</taskdef>

	<target name="main" description="Concatenate all js files">

		<delete dir="${destination}" />

		<foreach target="combined_js" param="file">
			<path>
				<fileset id="dashboardset" dir="${dashboardPathJS}/" includes="${dashboard}.js" />
			</path>
		</foreach>

		<foreach target="split_js" param="file">
			<path>
				<fileset id="dashboardset" dir="${dashboardPathJS}/" includes="${dashboard}.js" />
			</path>
		</foreach>

		<foreach target="create_html_css" param="file">
			<path>
				<fileset id="dashboardset" dir="${dashboardPathJS}/" includes="${dashboard}.js" />
			</path>
		</foreach>

		<antcall target="cleanup" />
	</target>

	<target name="combined_js" if="${combined}">

		<concat destfile="${filepath}" fixlastline="true" eol="unix">
			<!-- Naming conventions first -->
			<fileset dir="src/js/">
				<include name="**/**/NC.js" />
			</fileset>

			<fileset dir="src/js/">
				<include name="**" />
				<exclude name="**/**/NC.js" />
			</fileset>

			<fileset dir="${dashboardPathJS}/" includes="${filename}" />
		</concat>

		<antcall target="replaceImportExport">
			<param name="replacementFile" value="${filepath}" />
		</antcall>
	</target>

	<target name="replaceImportExport">

		<replaceregexp file="${replacementFile}" match="^import \{.*\}.*;" replace="" byline="true" />
		<replaceregexp file="${replacementFile}" match='^import \{.*\}.*;' replace="" byline="true" />
		<replaceregexp file="${replacementFile}" match="^export class" replace="class" byline="true" />
		<replaceregexp file="${replacementFile}" match="^export function" replace="function" byline="true" />
		<replaceregexp file="${replacementFile}" match="^export const" replace="const" byline="true" />
		<replaceregexp file="${replacementFile}" match="^module.exports.=.\{.*\};" replace="" byline="true" />
	</target>

	<target name="split_js" unless="${combined}">

		<concat destfile="${destination}/lib/${filename}" fixlastline="true" eol="unix">
			<!-- Naming conventions first -->
			<fileset dir="src/js/">
				<include name="**/**/NC.js" />
			</fileset>

			<fileset dir="src/js/">
				<include name="**" />
				<exclude name="**/**/NC.js" />
			</fileset>
		</concat>

		<antcall target="replaceImportExport">
			<param name="replacementFile" value="${filepath}" />
		</antcall>

		<concat destfile="${bodypath}" fixlastline="true" eol="unix">
			<fileset dir="${dashboardPathJS}/" includes="${filename}" />
		</concat>

		<antcall target="replaceImportExport">
			<param name="replacementFile" value="${bodypath}" />
		</antcall>

	</target>

	<target name="create_html_css">

		<basename property="filename" file="${file}" />
		<propertyregex property="base.name" input="${filename}" regexp="(.*)\.(.*)" select="\1" />

		<copy file="${dashboardPathHTML}/${base.name}.html" tofile="${destination}/${base.name}.html" />

		<concat destfile="${destination}/css/${base.name}.css" fixlastline="true" eol="unix">
			<fileset dir="${dashboardPathCSS}/">
				<include name="dashboard.css" />
			</fileset>
			<fileset dir="${dashboardPathCSS}/">
				<include name="${base.name}.css" />
			</fileset>
		</concat>

		<replaceregexp file="${destination}/${base.name}.html" match="DASHBOARD_NAME" replace="${base.name}" byline="true" />
		<replaceregexp file="${destination}/${base.name}.html" match="FILENAME" replace="${filename}" byline="true" />
		<replaceregexp file="${destination}/${base.name}.html" match="DASHBOARD_PLOTLY" replace="${plotly}" byline="true" />

		<antcall target="splitScript" />
		<antcall target="combinedScript" />
		<antcall target="replaceTQL" />

	</target>

	<target name="splitScript" unless="${combined}">
		<loadfile property="contents" srcFile="${bodypath}" />
		<replaceregexp file="${destination}/${base.name}.html" match="BODYSCRIPT" replace="${contents}" byline="true" />
		<replaceregexp file="${destination}/${base.name}.html" match="BODYSTYLE" replace="" byline="true" />

		<replaceregexp file="${destination}/${base.name}.html" match="DASHBOARD_LIBS" replace='src="./lib/${filename}"' byline="true" />
		<replaceregexp file="${destination}/${base.name}.html" match="DASHBOARD_CSS" replace="href='./${dashboardPathCSS}/${base.name}.css'" byline="true" />
	</target>

	<target name="combinedScript" if="${combined}">

		<copy file="${destination}/${base.name}.html" tofile="${destination}/${base.name}.txt" />

		<replaceregexp file="${destination}/${base.name}.txt" match="(.*\n)*\&lt;body\&gt;" replace="" byline="false" />
		<replaceregexp file="${destination}/${base.name}.txt" match="\&lt;&#47;body\&gt;(.*(\n)*)*" replace="" byline="false" />

		<loadfile property="contents" srcFile="${filepath}" />
		<loadfile property="csscontent" srcFile="${destination}/css/${base.name}.css" />

		<replace file="${destination}/${base.name}.html" token="BODYSCRIPT" value="${contents}" />
		<replace file="${destination}/${base.name}.html" token="BODYSTYLE" value="${csscontent}" />
		<replace file="${destination}/${base.name}.html" token="DASHBOARD_LIBS" value="" />
		<replace file="${destination}/${base.name}.html" token="DASHBOARD_CSS" value="" />

		<replace file="${destination}/${base.name}.txt" token="BODYSCRIPT" value="${contents}" />
		<replace file="${destination}/${base.name}.txt" token="BODYSTYLE" value="${csscontent}" />
		<replace file="${destination}/${base.name}.txt" token="DASHBOARD_LIBS" value="" />
		<replace file="${destination}/${base.name}.txt" token="DASHBOARD_CSS" value="" />

	</target>

	<target name="cleanup">

		<antcall target="cleanupcombined" />
		<delete dir="${destination}/body" />
		<delete dir="${destination}/body" />
	</target>

	<target name="cleanupcombined" if="${combined}">
		<delete dir="${destination}/css" />
		<delete dir="${destination}/lib" />
		<delete file="${destination}/css" />
		<delete file="${destination}/lib" />
	</target>

	<target name="replaceTQL" if="${replaceQueries}">
		<basename property="filename" file="${file}" />
		<propertyregex property="base.name" input="${filename}" regexp="(.*)\.(.*)" select="\1" />
		<if>
			<available file="${dashboardPathReplacements}/${base.name}.txt" />
			<then>

				<loadfile property="textFile" srcfile="${dashboardPathReplacements}/${base.name}.txt" />
				<echo>Replacing TQL for ${destination}/${base.name}.html</echo>

				<for param="line" list="${textFile}" delimiter="${line.separator}">

					<sequential>
						<local name="tql" />
						<propertyregex property="tql" input="@{line}" regexp="([^=]+)=([^=]+)" replace="\1" global="false" />

						<local name="values" />
						<propertyregex property="values" input="@{line}" regexp="([^=]+)=([^=]+)" replace="\2" global="false" />

						<echo message="tql: ${tql}" />
						<echo message="values: ${values}" />
						<replaceregexp file="${destination}/${base.name}.html" match="\${tql}" replace="${values}" byline="true" />

					</sequential>
				</for>

				<echo>Done Replacing TQL for ${destination}/${base.name}.html</echo>

				<replace file="${destination}/${base.name}.html" token="if(windowValidation)" value="if(!windowValidation)" />
				<echo>Done Replacing if(windowValidation) by if(!windowValidation)</echo>

			</then>
			<else>
				<echo>Not replacements for ${destination}/${base.name}.html</echo>
			</else>
		</if>
	</target>


</project>